    <div id="container">
      {{#iter numFrames}}
      <div>
        <select id="langSelect_{{this}}" onchange="changeFrameLang(this)" style="width:100%;">
          <option value="" disabled selected>Select language</option>
        </select>
        <div class="frameURL"></div>
        <iframe id="" src="" frameborder="0"></iframe>
      </div>
      {{/iter}}
    </div>

    <script>
    // GLOBALS //
    var DEBUG = 0;
    var transcode = "translation";
    var translations = {};
    // Set some initial frame languages
    // Could be replaced by a cookie instead
    var frameLangs = ['en', 'de', 'ru', 'ar'];

    // LISTENERS //
    document.addEventListener("DOMContentLoaded", function(){
      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function(){
        if (this.readyState == 4 && this.status == 200) {
          populateLanguageSelects(JSON.parse(this.responseText));
          if (frameLangs) initLanguageSelects();
        }
      }
      xhr.open("GET", "languages", true);
      xhr.send();

    });

    document.addEventListener("DOMFrameContentLoaded", function(e){
      var frame = e.target;
      var path = frame.contentWindow.location.pathname;

      if (DEBUG) {
        frame.parentElement.getElementsByClassName("frameURL")[0].innerText = frame.contentWindow.location.href;
      }

      // Only grab translations if page is itself not a grabbed translation
      res = path.match( /^\/page\/[a-zA-Z]{2,}(?:\-[a-zA-Z]{2,}){0,2}\/wiki\/.*?(?:\/(.*))?$/ );
      if ( res && res[1] != transcode ) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function(){
          if (this.readyState == 4 && this.status == 200) {
            translations = JSON.parse(this.responseText);
            loadTranslations(frame.id);
          }
        };
        var transURL = "transget" + path;
        xhttp.open("GET", transURL, true);
        xhttp.send();
      }
    });

    // FUNCTIONS //
    function populateLanguageSelects(langs){
      var html = '';
      for (var k in langs) {
        html += '<option value="' + k + '">';
        html += langs[k].original + ' (' + langs[k].romanized + ')';
        html += '</option>\n';
      }
      var frameCount = window.top.frames.length;
      for (var i = 0; i < frameCount; i++) {
        document.getElementById("langSelect_" + i).innerHTML += '\n' + html;
      }
      //for (i = 0; i < frameCount; i++){
      //  document.getElementById(frameLangs[i] + "_langSelect").innerHTML += '\n' + html;
      //}
    };

    function initLanguageSelects(){
      for (var i = 0; i < frameLangs.length; i++) {
        var dropdown = document.getElementById("langSelect_" + i);
        for (j = 0; j < dropdown.options.length; j++) {
          if (dropdown.options[j].value == frameLangs[i]) {
            dropdown.options[j].selected = true;
            dropdown.onchange();
          }
        }
      }
    };

    function loadTranslations(id){
      for (i = 0; i < frameLangs.length; i++){
        chkLang = frameLangs[i];
        // For all other frame id's
        if (chkLang != id){
          // Check if translation available
          if (translations[chkLang]){
            // Load translation in appropriate frame
            var url = "page/" + chkLang + "/wiki/" + translations[chkLang] + "/" + transcode;
            newFrameSrc(chkLang, url);
          } else {
            // Display placeholder
            var url = "page/unavailable";
            newFrameSrc(chkLang, url);
          }
        }
      }
      // Tidy up
      // i.e. empty translations array ??
    };

    function changeFrameLang(obj){
      var sectionId = obj.id.split('_')[1];
      var newLang = obj.value;
      // Alter relevant frame and select object id's
      obj.parentNode.getElementsByTagName("iframe")[0].id = newLang;
      // Update frame reference
      frameLangs[sectionId] = newLang;
      // Prep new frame src
      var url = "page/" + newLang;
      if (translations[newLang]) {
        url += "/wiki/" + translations[newLang] + '/' + transcode;
      }
      newFrameSrc(newLang, url);
    };

    function newFrameSrc(lang, url){
      document.getElementById(lang).src = url;
    };
    </script>
